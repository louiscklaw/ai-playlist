services:
  mongo:
    image: mongo:latest
    # build: 
    #   dockerfile: ./dbapi/Dockerfile.mongo
    # container_name: mongo
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: admin
    #   MONGO_INITDB_ROOT_PASSWORD: admin
    restart: unless-stopped
    ports:
      - 27017:27017

    # TODO:
    # find: ‘./src/volumes/mongo/data/db/diagnostic.data’: Permission denied
    # find: ‘./src/volumes/mongo/data/db/journal’: Permission denied
    volumes:
      - ./volumes/mongo/data/db:/data/db
      - ./volumes/mongo/data/configdb:/data/configdb
    healthcheck:
        test: echo 'db.stats().ok' | mongosh localhost:27017/test --quiet
        interval: 10s
        timeout: 10s
        retries: 5

    deploy:
      resources:
        limits:
          cpus: "0.7"
        reservations:
          cpus: "0.01"

  mongo-express:
    image: mongo-express:latest
    # container_name: mongo-express
    environment:
      # ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      # ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: '27017'
    ports:
      - 8081:8081
    depends_on:
      mongo:
        condition: service_healthy

    restart: unless-stopped

    deploy:
      resources:
        limits:
          cpus: "0.7"
        reservations:
          cpus: "0.01"

  dbapi:
    # build: ./dbapi
    image: logickee/poe-tryout-dbapi
    ports:
      - 3001:3001
    volumes:
      - ./dbapi:/app
      - ./volumes/logs:/logs

    depends_on:
      mongo:
        condition: service_healthy

    environment:
      - PORT=3001
      
    restart: unless-stopped
    entrypoint: ./entry.sh
    env_file: ./.env
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/healthcheck']
      interval: 10s
      timeout: 10s
      retries: 10

    deploy:
      resources:
        limits:
          cpus: "0.7"
        reservations:
          cpus: "0.01"
